{"version":3,"sources":["../../../../src/queries/humanlog-time-series-query/HumanlogTimeSeriesQueryEditor.tsx"],"sourcesContent":["import { DatasourceSelect, DatasourceSelectProps, isVariableDatasource, OptionsEditorProps } from '@perses-dev/plugin-system';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { HumanlogTimeSeriesQuerySpec } from './humanlog-time-series-query-types';\nimport { DATASOURCE_KIND, DEFAULT_DATASOURCE } from './constants';\n\ntype HumanlogTimeSeriesQueryEditorProps = OptionsEditorProps<HumanlogTimeSeriesQuerySpec>;\n\nexport function HumanlogTimeSeriesQueryEditor(props: HumanlogTimeSeriesQueryEditorProps): ReactElement {\n  const { onChange, value } = props;\n  const {datasource} = value;\n  const selectedDatasource = datasource ?? DEFAULT_DATASOURCE;\n  const [localQuery, setLocalQuery] = useState(value.query);\n\n  const handleDatasourceChange: DatasourceSelectProps['onChange'] = (newDatasourceSelection) => {\n    if(!isVariableDatasource(newDatasourceSelection) && newDatasourceSelection.kind === DATASOURCE_KIND) {\n      onChange({ ...value, datasource: newDatasourceSelection });\n      return;\n    }\n\n    throw new Error('Got unexpected non HumanlogTimeSeriesQuery datasource selection');\n  };\n\n  const handleQueryBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n    if (newQuery !== value.query) {\n      onChange({ ...value, query: newQuery });\n    }\n  };\n\n  useEffect(() => {\n    setLocalQuery(value.query);\n  }, [value.query]);\n\n  return (\n    <div>\n      <label>HumanlogTimeSeriesQuery Datasource</label>\n      <DatasourceSelect\n          datasourcePluginKind={DATASOURCE_KIND}\n          value={selectedDatasource}\n          onChange={handleDatasourceChange}\n          label=\"HumanlogTimeSeriesQuery Datasource\"\n          notched\n        />\n      <input \n        onBlur={handleQueryBlur} \n        onChange={(e) => setLocalQuery(e.target.value)} \n        placeholder='query' \n        value={localQuery} />\n    </div>\n  );\n}\n"],"names":["DatasourceSelect","isVariableDatasource","useEffect","useState","DATASOURCE_KIND","DEFAULT_DATASOURCE","HumanlogTimeSeriesQueryEditor","props","onChange","value","datasource","selectedDatasource","localQuery","setLocalQuery","query","handleDatasourceChange","newDatasourceSelection","kind","Error","handleQueryBlur","event","newQuery","target","div","label","datasourcePluginKind","notched","input","onBlur","e","placeholder"],"mappings":";AAAA,SAASA,gBAAgB,EAAyBC,oBAAoB,QAA4B,4BAA4B;AAC9H,SAAuBC,SAAS,EAAEC,QAAQ,QAAQ,QAAQ;AAE1D,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,cAAc;AAIlE,OAAO,SAASC,8BAA8BC,KAAyC;IACrF,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGF;IAC5B,MAAM,EAACG,UAAU,EAAC,GAAGD;IACrB,MAAME,qBAAqBD,cAAcL;IACzC,MAAM,CAACO,YAAYC,cAAc,GAAGV,SAASM,MAAMK,KAAK;IAExD,MAAMC,yBAA4D,CAACC;QACjE,IAAG,CAACf,qBAAqBe,2BAA2BA,uBAAuBC,IAAI,KAAKb,iBAAiB;YACnGI,SAAS;gBAAE,GAAGC,KAAK;gBAAEC,YAAYM;YAAuB;YACxD;QACF;QAEA,MAAM,IAAIE,MAAM;IAClB;IAEA,MAAMC,kBAAkB,CAACC;QACvB,MAAMC,WAAWD,MAAME,MAAM,CAACb,KAAK;QACnC,IAAIY,aAAaZ,MAAMK,KAAK,EAAE;YAC5BN,SAAS;gBAAE,GAAGC,KAAK;gBAAEK,OAAOO;YAAS;QACvC;IACF;IAEAnB,UAAU;QACRW,cAAcJ,MAAMK,KAAK;IAC3B,GAAG;QAACL,MAAMK,KAAK;KAAC;IAEhB,qBACE,MAACS;;0BACC,KAACC;0BAAM;;0BACP,KAACxB;gBACGyB,sBAAsBrB;gBACtBK,OAAOE;gBACPH,UAAUO;gBACVS,OAAM;gBACNE,OAAO;;0BAEX,KAACC;gBACCC,QAAQT;gBACRX,UAAU,CAACqB,IAAMhB,cAAcgB,EAAEP,MAAM,CAACb,KAAK;gBAC7CqB,aAAY;gBACZrB,OAAOG;;;;AAGf"}