{"version":3,"sources":["../../../src/utils/id-factories.ts"],"sourcesContent":["import { TraceID, SpanID } from \"api/js/types/v1/types_pb\";\n\nexport const unit8ArrayBufferToBase16 = (buffer?: Uint8Array): string => {\n  if (!buffer) return \"\";\n\n  return Array.from(buffer)\n    .map((byte) => byte.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n};\n\n// Convert TraceID object to string\nexport const traceIdToString = (traceId?: TraceID): string => {\n  if (!traceId || !traceId.raw) {\n    return \"\";\n  }\n  return unit8ArrayBufferToBase16(traceId.raw);\n};\n\n// Convert SpanID object to string\nexport const spanIdToString = (spanId?: SpanID): string => {\n  if (!spanId || !spanId.raw) {\n    return \"\";\n  }\n  return unit8ArrayBufferToBase16(spanId.raw);\n};\n"],"names":["unit8ArrayBufferToBase16","buffer","Array","from","map","byte","toString","padStart","join","traceIdToString","traceId","raw","spanIdToString","spanId"],"mappings":"AAEA,OAAO,MAAMA,2BAA2B,CAACC;IACvC,IAAI,CAACA,QAAQ,OAAO;IAEpB,OAAOC,MAAMC,IAAI,CAACF,QACfG,GAAG,CAAC,CAACC,OAASA,KAAKC,QAAQ,CAAC,IAAIC,QAAQ,CAAC,GAAG,MAC5CC,IAAI,CAAC;AACV,EAAE;AAEF,mCAAmC;AACnC,OAAO,MAAMC,kBAAkB,CAACC;IAC9B,IAAI,CAACA,WAAW,CAACA,QAAQC,GAAG,EAAE;QAC5B,OAAO;IACT;IACA,OAAOX,yBAAyBU,QAAQC,GAAG;AAC7C,EAAE;AAEF,kCAAkC;AAClC,OAAO,MAAMC,iBAAiB,CAACC;IAC7B,IAAI,CAACA,UAAU,CAACA,OAAOF,GAAG,EAAE;QAC1B,OAAO;IACT;IACA,OAAOX,yBAAyBa,OAAOF,GAAG;AAC5C,EAAE"}