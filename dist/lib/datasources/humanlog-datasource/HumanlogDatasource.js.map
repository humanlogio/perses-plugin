{"version":3,"sources":["../../../../src/datasources/humanlog-datasource/HumanlogDatasource.tsx"],"sourcesContent":["import { DatasourcePlugin } from \"@perses-dev/plugin-system\";\nimport {\n  HumanlogDatasourceSpec,\n  HumanlogDatasourceClient,\n} from \"./humanlog-datasource-types\";\nimport { HumanlogDatasourceEditor } from \"./HumanlogDatasourceEditor\";\nimport { createConnectTransport } from \"@connectrpc/connect-web\";\nimport { QueryService } from \"api/js/svc/query/v1/service_connect\";\nimport { createClient as createConnectClient } from \"@connectrpc/connect\";\n\nconst createClient: DatasourcePlugin<\n  HumanlogDatasourceSpec,\n  HumanlogDatasourceClient\n>[\"createClient\"] = (spec, options) => {\n  const { directUrl } = spec;\n\n  const datasourceUrl = directUrl;\n  if (datasourceUrl === undefined) {\n    throw new Error(\n      \"No URL specified for HumanlogDatasource client. You can use directUrl in the spec to configure it.\",\n    );\n  }\n\n  const transport = createConnectTransport({ baseUrl: datasourceUrl });\n  const queryClient = createConnectClient(QueryService, transport);\n\n  return {\n    options: {\n      datasourceUrl,\n    },\n    query: async (params, headers) => {\n      try {\n        const parsed = await queryClient.parse({ query: params.query });\n        const result = await queryClient.query({ query: parsed.query });\n        return {\n          status: result.data ? \"success\" : \"error\",\n          data: result,\n        };\n      } catch (e) {\n        console.error(\"Invalid response from server\", e);\n        throw new Error(\"Invalid response from server: \" + e);\n      }\n    },\n  };\n};\n\nexport const HumanlogDatasource: DatasourcePlugin<\n  HumanlogDatasourceSpec,\n  HumanlogDatasourceClient\n> = {\n  createClient,\n  OptionsEditorComponent: HumanlogDatasourceEditor,\n  createInitialOptions: () => ({ directUrl: \"http://localhost:32764\" }),\n};\n"],"names":["HumanlogDatasourceEditor","createConnectTransport","QueryService","createClient","createConnectClient","spec","options","directUrl","datasourceUrl","undefined","Error","transport","baseUrl","queryClient","query","params","headers","parsed","parse","result","status","data","e","console","error","HumanlogDatasource","OptionsEditorComponent","createInitialOptions"],"mappings":"AAKA,SAASA,wBAAwB,QAAQ,6BAA6B;AACtE,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,YAAY,QAAQ,sCAAsC;AACnE,SAASC,gBAAgBC,mBAAmB,QAAQ,sBAAsB;AAE1E,MAAMD,eAGc,CAACE,MAAMC;IACzB,MAAM,EAAEC,SAAS,EAAE,GAAGF;IAEtB,MAAMG,gBAAgBD;IACtB,IAAIC,kBAAkBC,WAAW;QAC/B,MAAM,IAAIC,MACR;IAEJ;IAEA,MAAMC,YAAYV,uBAAuB;QAAEW,SAASJ;IAAc;IAClE,MAAMK,cAAcT,oBAAoBF,cAAcS;IAEtD,OAAO;QACLL,SAAS;YACPE;QACF;QACAM,OAAO,OAAOC,QAAQC;YACpB,IAAI;gBACF,MAAMC,SAAS,MAAMJ,YAAYK,KAAK,CAAC;oBAAEJ,OAAOC,OAAOD,KAAK;gBAAC;gBAC7D,MAAMK,SAAS,MAAMN,YAAYC,KAAK,CAAC;oBAAEA,OAAOG,OAAOH,KAAK;gBAAC;gBAC7D,OAAO;oBACLM,QAAQD,OAAOE,IAAI,GAAG,YAAY;oBAClCA,MAAMF;gBACR;YACF,EAAE,OAAOG,GAAG;gBACVC,QAAQC,KAAK,CAAC,gCAAgCF;gBAC9C,MAAM,IAAIZ,MAAM,mCAAmCY;YACrD;QACF;IACF;AACF;AAEA,OAAO,MAAMG,qBAGT;IACFtB;IACAuB,wBAAwB1B;IACxB2B,sBAAsB,IAAO,CAAA;YAAEpB,WAAW;QAAyB,CAAA;AACrE,EAAE"}