(self.webpackChunkHumanlog=self.webpackChunkHumanlog||[]).push([["3350"],{0:function(e,t,r){var n={"./simpleWorker.js":"45585","./simpleWorker":"45585"};function a(e){return Promise.resolve().then(function(){if(!r.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r(n[e])})}a.keys=()=>Object.keys(n),a.id=0,e.exports=a},5498:function(e,t,r){var n={"./textModelSync/textModelSync.protocol":["45628","9485"],"./treeSitterParserService":["35320"],"./markerDecorations":["80886"],"./languageService.js":["83930"],"./languageService":["83930"],"./markerDecorationsService":["90011"],"./markerDecorationsService.js":["90011"],"./modelService.js":["40931"],"./resolverService":["37042"],"./semanticTokensProviderStyling":["118"],"./languageFeatureDebounce":["89679"],"./editorSimpleWorker":["8006"],"./textModelSync/textModelSync.impl.js":["71875"],"./modelService":["40931"],"./semanticTokensDto.js":["19376","7225"],"./textModelSync/textModelSync.impl":["71875"],"./model":["64830"],"./treeViewsDnd":["2603","3816"],"./languagesRegistry":["66995"],"./model.js":["64830"],"./findSectionHeaders.js":["99307"],"./editorBaseApi":["93059"],"./treeSitterParserService.js":["35320"],"./resolverService.js":["37042"],"./semanticTokensProviderStyling.js":["118"],"./getIconClasses.js":["16951","9644"],"./languageFeatures":["52230"],"./semanticTokensDto":["19376","7225"],"./semanticTokensStylingService":["38148"],"./editorBaseApi.js":["93059"],"./textResourceConfiguration":["41504"],"./treeViewsDndService":["26756","5797"],"./semanticTokensStyling":["5272"],"./textResourceConfiguration.js":["41504"],"./treeViewsDnd.js":["2603","3816"],"./editorWorker.js":["90304"],"./unicodeTextModelHighlighter":["49887"],"./unicodeTextModelHighlighter.js":["49887"],"./editorSimpleWorker.js":["8006"],"./languagesAssociations.js":["55996"],"./languageFeatures.js":["52230"],"./treeViewsDndService.js":["26756","5797"],"./languageFeatureDebounce.js":["89679"],"./languageFeaturesService.js":["22078"],"./editorWorker":["90304"],"./textModelSync/textModelSync.protocol.js":["45628","9485"],"./findSectionHeaders":["99307"],"./languageFeaturesService":["22078"],"./semanticTokensStyling.js":["5272"],"./languagesAssociations":["55996"],"./editorWorkerHost":["96358"],"./editorWorkerHost.js":["96358"],"./getIconClasses":["16951","9644"],"./languagesRegistry.js":["66995"],"./semanticTokensStylingService.js":["38148"],"./markerDecorations.js":["80886"]};function a(e){if(!r.o(n,e))return Promise.resolve().then(function(){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t});var t=n[e],a=t[0];return Promise.all(t.slice(1).map(r.e)).then(function(){return r(a)})}a.keys=()=>Object.keys(n),a.id=5498,e.exports=a},45156:function(e){function t(e){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=45156,e.exports=t},53746:function(e,t,r){"use strict";r.r(t),r.d(t,{HumanlogTimeSeriesQueryEditor:()=>b,DATASOURCE_KIND:()=>n,DEFAULT_DATASOURCE:()=>a,getTimeSeriesData:()=>s,HumanlogTimeSeriesQuery:()=>x});let n="HumanlogDatasource",a={kind:n};var o=r(11283);let i=e=>new Date(1e3*Number(e.seconds)+Math.ceil(e.nanos/1e6)),s=async(e,t)=>{if(void 0===e.query||null===e.query||""===e.query)return{series:[]};let r=(0,o.replaceVariables)(e.query,t.variableState),n=await t.datasourceStore.getDatasourceClient(e.datasource??a),{start:s,end:l}=t.timeRange;return{series:function(e){var t,r;if(!(null==e||null==(r=e.data)||null==(t=r.data)?void 0:t.shape.case)||"freeForm"!==e.data.data.shape.case)return[];let{type:n,rows:a}=e.data.data.shape.value;if(!(null==n?void 0:n.columns)||0===a.length)return[];let o=n.columns.findIndex(e=>{var t,r;return(null==(r=e.type)||null==(t=r.type)?void 0:t.case)==="scalar"&&5===e.type.type.value}),s=n.columns.findIndex(e=>{var t,r;return(null==(r=e.type)||null==(t=r.type)?void 0:t.case)==="scalar"&&(2===e.type.type.value||3===e.type.type.value)});if(-1===s&&(s=n.columns.findIndex(e=>{var t,r;return(null==(r=e.type)||null==(t=r.type)?void 0:t.case)==="scalar"&&6===e.type.type.value})),-1===o||-1===s)return[];let l=[];for(let e of a){let t,r,n=e.items[o],a=e.items[s];if(n&&a){if("ts"!==n.kind.case)continue;if(t=i(n.kind.value).getTime(),"f64"===a.kind.case)r=a.kind.value;else if("i64"===a.kind.case)r=Number(a.kind.value);else if("dur"===a.kind.case){let e=a.kind.value;r=1e3*Number(e.seconds||0)+(e.nanos||0)/1e6}else r=null;l.push([t,r])}}return l.sort((e,t)=>e[0]-t[0]),[{name:"humanlog-time-series",values:l}]}(await n.query({start:s.getTime().toString(),end:l.getTime().toString(),query:r})),timeRange:{start:s,end:l},stepMs:3e4,metadata:{executedQueryString:r}}};var l=r(74848),d=r(3722),u=r(19304),c=r(21592);let m="humanlogql",g={name:m,mimeTypes:["text/humanlogql"],displayName:"humanlogQL",defaultToken:"invalid",queryOperators:["as","consume","distinct","evaluate","extend","getschema","graph-match","graph-merge","graph-to-table","invoke","join","limit","lookup","make-graph","make-series","mv-apply","mv-expand","order","parse","parse-kv","parse-where","project","project-away","project-keep","project-rename","project-reorder","range","reduce","render","sample","sample-distinct","scan","serialize","sort","summarize","take","top","top-hitters","top-nested","union","where","filter","fork","facet","range","consume","find","search","print","partition","lookup"],queryParameters:["kind"],types:["bool","datetime","decimal","double","dynamic","guid","int","long","real","string","timespan"],functions:["abs","acos","ago","array_concat","array_length","array_slice","array_split","asin","atan","atan2","avg","bag_keys","base64_decodestring","base64_encodestring","bin","bin_at","binary_and","binary_not","binary_or","binary_shift_left","binary_shift_right","binary_xor","case","ceiling","coalesce","columnifexists","cos","count","countof","cot","cursor_after","datatable","datepart","datetime_add","datetime_diff","datetime_part","dayofmonth","dayofweek","dayofyear","dcount","dcount_hll","degrees","endofday","endofmonth","endofweek","endofyear","exp","exp10","exp2","extract","extractall","extractjson","format_datetime","format_timespan","floor","gamma","geo_distance_2points","geo_geohash_to_central_point","geo_point_in_circle","geo_point_in_polygon","geo_point_to_geohash","getmonth","gettype","getyear","hash","hash_sha256","hll_merge","iif","indexof","isempty","isfinite","isinf","isascii","isnan","isnotempty","isnotnull","isnull","isutf8","log","log10","log2","loggamma","make_datetime","make_string","make_timespan","materialize","max","max_of","min","min_of","monthofyear","next","not","pack","pack_array","pack_dictionary","parse_csv","parse_ipv4","parse_json","parse_path","parse_url","parse_urlquery","parse_user_agent","parse_version","parse_xml","parsejson","percentrank_tdigest","percentile_tdigest","pow","prev","radians","rand","rank_tdigest","repeat","replace","reverse","round","row_cumsum","row_window_session","series_add","series_decompose","series_decompose_anomalies","series_decompose_forecast","series_divide","series_equals","series_fill_backward","series_fill_const","series_fill_forward","series_fill_linear","series_fir","series_fit_2lines","series_fit_2lines_dynamic","series_fit_line","series_fit_line_dynamic","series_greater","series_greater_equals","series_iir","series_less","series_less_equals","series_multiply","series_not_equals","series_outliers","series_pearson_correlation","series_periods_detect","series_periods_validate","series_seasonal","series_stats","series_stats_dynamic","series_subtract","sign","sin","split","sqrt","startofday","startofmonth","startofweek","startofyear","strcat","strcat_array","strcat_delim","strcmp","strlen","strrep","string_size","substring","sum","tan","tdigest_merge","tobool","toboolean","todecimal","todouble","todynamic","tofloat","toguid","tohex","toint","tolong","tolower","toobject","toreal","toscalar","tostring","totimespan","toupper","translate","trim","trim_end","trim_start","typeof","url_decode","url_encode","week_of_year","welch_test"],keywords:["and","as","asc","by","contains","count","desc","extend","false","filter","find","has","in","let","not","on","or","project","project-away","project-rename","project-reorder","project-keep","rename","summarize","take","to","true","where"],tokenizer:{root:[[/(\/\/.*$)/,"comment"],[/[\(\)\{\}\|\[\]\:\=\,\<|\.\..]/,"punctuation"],[/[\+\-\*\/\%\!\<\<=\>\>=\=\==\!=\<>\:\;\,\=~\@\?\=>\!~]/,"mathOperator"],[/"([^"\\]*(\\.[^"\\]*)*)"/,"stringLiteral"],[/'([^"\\]*(\\.[^"\\]*)*)'/,"stringLiteral"],[/[\w@#\-$\.]+/,{cases:{"@queryOperators":"queryOperator","@queryParameters":"queryParameter","@types":"type","@functions":"function","@keywords":"keyword","@default":"identifier"}}]]}},p={automaticLayout:!0,minimap:{enabled:!1},lineNumbers:"off",overviewRulerBorder:!1,overviewRulerLanes:0,hideCursorInOverviewRuler:!0,renderLineHighlight:"none",scrollbar:{vertical:"auto",horizontal:"auto",verticalScrollbarSize:8,horizontalScrollbarSize:8,useShadows:!1},scrollBeyondLastLine:!1,padding:{top:8,bottom:8},fontSize:14,lineHeight:20,contextmenu:!1,selectOnLineNumbers:!1,roundedSelection:!1,readOnly:!1,cursorStyle:"line",wordWrap:"off",quickSuggestions:!0,parameterHints:{enabled:!0},suggestOnTriggerCharacters:!0},h={folding:{offSide:!1,markers:{start:/^\s*[\r\n]/gm,end:/^\s*[\r\n]/gm}},comments:{lineComment:"//",blockComment:null},autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string","comment"]}],brackets:[["[","]"],["{","}"],["(",")"]],colorizedBracketPairs:[]},f=(e,t,r)=>{let n=e.getWordUntilPosition(t);return{startLineNumber:t.lineNumber,endLineNumber:t.lineNumber,startColumn:n.startColumn,endColumn:n.endColumn}},y=e=>{let{width:t="100%",height:r=60,value:n,onChange:a,onMount:o,options:i,...s}=e,y=(0,d.useRef)(null),_=(0,d.useRef)(null),[v,k]=(0,d.useState)(r),b={...p,...i},x=(0,d.useCallback)(()=>{y.current&&y.current.layout()},[]);return(0,d.useEffect)(()=>{y.current&&n?k(Math.min(Math.max(18*n.split("\n").length+10,60),200)):k(r)},[n,r]),(0,d.useEffect)(()=>{n&&k(Math.min(Math.max(18*n.split("\n").length+10,60),200))},[]),(0,d.useEffect)(()=>{y.current&&y.current.layout()},[v]),(0,d.useEffect)(()=>(window.addEventListener("resize",x),()=>{window.removeEventListener("resize",x)}),[x]),(0,l.jsx)(u.Ay,{width:t,height:v,defaultLanguage:m,value:n,onChange:a,options:b,onMount:(e,t)=>{var r;y.current=e,_.current=t,null==(r=e.getModel())||r.updateOptions({tabSize:2}),e.updateOptions(p),e.layout(),t.editor.defineTheme("humanlogql-dark",{base:"vs-dark",inherit:!0,rules:[],colors:{"editor.background":"#000000"}}),t.editor.defineTheme("humanlogql-light",{base:"vs",inherit:!0,rules:[],colors:{"editor.background":"#FFFFFF"}}),t.languages.register({id:m}),t.languages.setLanguageConfiguration(m,h),t.languages.setMonarchTokensProvider(m,g),t.languages.registerCompletionItemProvider(m,{triggerCharacters:["[","|"],provideCompletionItems:async(e,t,r,n)=>{let a,o,i=[];return r.triggerKind===c.eo.CompletionTriggerKind.Invoke&&i.push(...(a=e,o=t,[{label:{label:"machine",detail:" machine that emitted the log event"},kind:c.eo.CompletionItemKind.Property,insertText:"machine",documentation:"The machine on which a log was recorded.",range:f(a,o,"machine")},{label:{label:"session",detail:" session of a log event"},kind:c.eo.CompletionItemKind.Property,insertText:"session",documentation:"The session during which a log was recorded. Sessions roughly map to processes, or a single invocation of `humanlog`. Sessions are unique only within a machine.",range:f(a,o,"machine")},{label:{label:"event",detail:" event is an identifier for a log event"},kind:c.eo.CompletionItemKind.Property,insertText:"event",documentation:"The event during which a log was recorded. Events roughly map to log lines ingested by `humanlog`. Events are unique and ordered only within a (machine, session) pair. No global order exists.",range:f(a,o,"event")},{label:{label:"parsed_at",detail:" parsed_at is the timestamp when the log event was parsed"},kind:c.eo.CompletionItemKind.Property,insertText:"parsed_at",documentation:"The timestamp when the log event was parsed in `humanlog`.",range:f(a,o,"parsed_at")},{label:{label:"raw",detail:" raw is the raw content of the log event"},kind:c.eo.CompletionItemKind.Property,insertText:"raw",documentation:"The full unparsed content of the log event.",range:f(a,o,"raw")},{label:{label:"ts",detail:" ts is a timestamp for a log event"},kind:c.eo.CompletionItemKind.Property,insertText:"ts",documentation:"The ts found in a log event, if parsed in `humanlog`. When no timestamp is found, the default timestamp is the time of parsing. See `parsed_at`.",range:f(a,o,"ts")},{label:{label:"lvl",detail:" lvl is a log level"},kind:c.eo.CompletionItemKind.Property,insertText:"lvl",documentation:"The log level found in a log event, if parsed in `humanlog`. Usually one of `debug`, `info`, `warn`, `error`, `panic` or `fatal`.",range:f(a,o,"lvl")},{label:{label:"msg",detail:" msg is the main message a log event"},kind:c.eo.CompletionItemKind.Property,insertText:"msg",documentation:"The message found in a log event, if parsed in `humanlog`.",range:f(a,o,"msg")},{label:{label:"kv",detail:" kv are key-values in a log event"},kind:c.eo.CompletionItemKind.Property,insertText:"kv",documentation:"The key-values found in a log event, if parsed in `humanlog`.",range:f(a,o,"kv")}])),{suggestions:i}}}),null==o||o(e,t)},loading:(0,l.jsx)(l.Fragment,{children:"Loading Editor..."}),...s})};var _=r(44675),v=r(75593),k=r(33551);function b(e){let{onChange:t,value:r}=e,{datasource:i}=r,[s,u]=(0,d.useState)(r.query),c=(0,_.A)();return(0,d.useEffect)(()=>{u(r.query)},[r.query]),(0,l.jsxs)(v.A,{sx:{display:"flex",flexDirection:"column",gap:2},children:[(0,l.jsxs)(v.A,{children:[(0,l.jsx)(k.A,{variant:"subtitle2",sx:{mb:1,fontWeight:500,color:c.palette.text.secondary},children:"Datasource"}),(0,l.jsx)(o.DatasourceSelect,{datasourcePluginKind:n,value:i??a,onChange:e=>{if(!(0,o.isVariableDatasource)(e)&&e.kind===n)return void t({...r,datasource:e});throw Error("Got unexpected non HumanlogTimeSeriesQuery datasource selection")},notched:!0})]}),(0,l.jsxs)(v.A,{children:[(0,l.jsx)(k.A,{variant:"subtitle2",sx:{mb:1,fontWeight:500,color:c.palette.text.secondary},children:"Query"}),(0,l.jsx)(v.A,{sx:{border:`1px solid ${c.palette.divider}`,borderRadius:"4px",overflow:"hidden",backgroundColor:c.palette.background.paper,boxShadow:c.shadows[1],"&:hover":{borderColor:c.palette.primary.main},"&:focus-within":{borderColor:c.palette.primary.main,borderWidth:"2px",margin:"-1px"},transition:c.transitions.create(["border-color","box-shadow"])},children:(0,l.jsx)(y,{value:s,onChange:e=>{u(e??""),void 0!==e&&e!==r.query&&t({...r,query:e})},options:{fontFamily:c.typography.fontFamily}})})]})]})}let x={getTimeSeriesData:s,OptionsEditorComponent:b,createInitialOptions:()=>({query:""}),dependsOn:e=>({variables:[...new Set([...(0,o.parseVariables)(e.query)])]})}}}]);