/*! For license information please see __federation_expose_HumanlogTimeSeriesQuery.ec9c2077.js.LICENSE.txt */
"use strict";(self.webpackChunkHumanlog=self.webpackChunkHumanlog||[]).push([["3855"],{75251:function(e,r,t){var a=t(21790),n=Symbol.for("react.element"),u=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var a,u={},l=null,c=null;for(a in void 0!==t&&(l=""+t),void 0!==r.key&&(l=""+r.key),void 0!==r.ref&&(c=r.ref),r)o.call(r,a)&&!s.hasOwnProperty(a)&&(u[a]=r[a]);if(e&&e.defaultProps)for(a in r=e.defaultProps)void 0===u[a]&&(u[a]=r[a]);return{$$typeof:n,type:e,key:l,ref:c,props:u,_owner:i.current}}r.Fragment=u,r.jsx=l,r.jsxs=l},85893:function(e,r,t){e.exports=t(75251)},47714:function(e,r,t){t.r(r),t.d(r,{HumanlogTimeSeriesQueryEditor:()=>l,DATASOURCE_KIND:()=>a,DEFAULT_DATASOURCE:()=>n,getTimeSeriesData:()=>o,HumanlogTimeSeriesQuery:()=>c});let a="HumanlogDatasource",n={kind:a};var u=t(88504);let o=async(e,r)=>{if(void 0===e.query||null===e.query||""===e.query)return{series:[]};let t=(0,u.replaceVariables)(e.query,r.variableState),a=await r.datasourceStore.getDatasourceClient(e.datasource??n),{start:o,end:i}=r.timeRange;return{series:await a.query({start:o.getTime().toString(),end:i.getTime().toString(),query:t})?[{name:"todo",values:[]}]:[],timeRange:{start:o,end:i},stepMs:3e4,metadata:{executedQueryString:t}}};var i=t(85893),s=t(21790);function l(e){let{onChange:r,value:t}=e,{datasource:o}=t,[l,c]=(0,s.useState)(t.query);return(0,s.useEffect)(()=>{c(t.query)},[t.query]),(0,i.jsxs)("div",{children:[(0,i.jsx)("label",{children:"HumanlogTimeSeriesQuery Datasource"}),(0,i.jsx)(u.DatasourceSelect,{datasourcePluginKind:a,value:o??n,onChange:e=>{if(!(0,u.isVariableDatasource)(e)&&e.kind===a)return void r({...t,datasource:e});throw Error("Got unexpected non HumanlogTimeSeriesQuery datasource selection")},label:"HumanlogTimeSeriesQuery Datasource",notched:!0}),(0,i.jsx)("input",{onBlur:e=>{let a=e.target.value;a!==t.query&&r({...t,query:a})},onChange:e=>c(e.target.value),placeholder:"query",value:l})]})}let c={getTimeSeriesData:o,OptionsEditorComponent:l,createInitialOptions:()=>({query:""}),dependsOn:e=>({variables:[...new Set([...(0,u.parseVariables)(e.query)])]})}}}]);